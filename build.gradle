plugins {
    id 'java-gradle-plugin'
    id 'jacoco'
    id 'maven-publish'
    id 'org.ajoberstar.reckon' version '0.11.0'
    id 'org.sonarqube' version '2.6.2'
}
group 'be.vbgn.gradle'

sourceCompatibility = 1.8

sourceSets {
    integrationTest {

    }
}

repositories {
    jcenter()
}

configurations {
    integrationTestImplementation.extendsFrom(testImplementation)
}

dependencies {
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:3.1.0'
    integrationTestImplementation 'commons-io:commons-io:2.5'
}

gradlePlugin {
    plugins {
        buildAspects {
            id = 'be.vbgn.build-aspects'
            implementationClass = 'be.vbgn.gradle.buildaspects.BuildAspectsPlugin'
        }
    }
    testSourceSets(sourceSets.integrationTest)
}


import org.gradle.util.GradleVersion
task integrationTest(type: Test, group: 'verification') {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    dependsOn(publishToMavenLocal)
    doFirst {
        systemProperty "pluginVersion", project.version
        if (gradle.startParameter.offline) {
            systemProperty "be.vbgn.gradle.buildaspects.integration.useGradleVersion", GradleVersion.current().version
            systemProperty "be.vbgn.gradle.buildaspects.integration.forceCurrentGradleVersion", "true"
        }
    }
    shouldRunAfter(tasks.test)
}

check {
    dependsOn(tasks.integrationTest)
}

sonarqube {
    properties {
        properties["sonar.tests"] += sourceSets.integrationTest.allSource.srcDirs
    }
}

reckon {
    scopeFromProp()
    snapshotFromProp()
}
